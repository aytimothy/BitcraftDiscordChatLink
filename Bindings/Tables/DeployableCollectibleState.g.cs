// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.


#nullable enable

using System;
using SpacetimeDB;
using SpacetimeDB.BSATN;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace BitCraftRegion.Types
{
    public sealed partial class RemoteTables
    {
        public sealed class DeployableCollectibleStateHandle : RemoteTableHandle<EventContext, DeployableCollectibleState>
        {
            protected override string RemoteTableName => "deployable_collectible_state";

            public sealed class DeployableEntityIdUniqueIndex : UniqueIndexBase<ulong>
            {
                protected override ulong GetKey(DeployableCollectibleState row) => row.DeployableEntityId;

                public DeployableEntityIdUniqueIndex(DeployableCollectibleStateHandle table) : base(table) { }
            }

            public readonly DeployableEntityIdUniqueIndex DeployableEntityId;

            public sealed class OwnerEntityIdIndex : BTreeIndexBase<ulong>
            {
                protected override ulong GetKey(DeployableCollectibleState row) => row.OwnerEntityId;

                public OwnerEntityIdIndex(DeployableCollectibleStateHandle table) : base(table) { }
            }

            public readonly OwnerEntityIdIndex OwnerEntityId;

            internal DeployableCollectibleStateHandle(DbConnection conn) : base(conn)
            {
                DeployableEntityId = new(this);
                OwnerEntityId = new(this);
            }

            protected override object GetPrimaryKey(DeployableCollectibleState row) => row.DeployableEntityId;
        }

        public readonly DeployableCollectibleStateHandle DeployableCollectibleState;
    }
}
