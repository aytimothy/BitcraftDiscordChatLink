// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.


#nullable enable

using System;
using SpacetimeDB;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace BitCraftRegion.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void UpdateMovingCostHandler(ReducerEventContext ctx, ulong playerHousingEntityId, int movingCost);
        public event UpdateMovingCostHandler? OnUpdateMovingCost;

        public void UpdateMovingCost(ulong playerHousingEntityId, int movingCost)
        {
            conn.InternalCallReducer(new Reducer.UpdateMovingCost(playerHousingEntityId, movingCost), this.SetCallReducerFlags.UpdateMovingCostFlags);
        }

        public bool InvokeUpdateMovingCost(ReducerEventContext ctx, Reducer.UpdateMovingCost args)
        {
            if (OnUpdateMovingCost == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnUpdateMovingCost(
                ctx,
                args.PlayerHousingEntityId,
                args.MovingCost
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class UpdateMovingCost : Reducer, IReducerArgs
        {
            [DataMember(Name = "player_housing_entity_id")]
            public ulong PlayerHousingEntityId;
            [DataMember(Name = "moving_cost")]
            public int MovingCost;

            public UpdateMovingCost(
                ulong PlayerHousingEntityId,
                int MovingCost
            )
            {
                this.PlayerHousingEntityId = PlayerHousingEntityId;
                this.MovingCost = MovingCost;
            }

            public UpdateMovingCost()
            {
            }

            string IReducerArgs.ReducerName => "update_moving_cost";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags UpdateMovingCostFlags;
        public void UpdateMovingCost(CallReducerFlags flags) => UpdateMovingCostFlags = flags;
    }
}
