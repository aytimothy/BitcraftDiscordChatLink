// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.


#nullable enable

using System;
using SpacetimeDB;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace BitCraftRegion.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void AdminUpdateLoreKnowledgeHandler(ReducerEventContext ctx);
        public event AdminUpdateLoreKnowledgeHandler? OnAdminUpdateLoreKnowledge;

        public void AdminUpdateLoreKnowledge()
        {
            conn.InternalCallReducer(new Reducer.AdminUpdateLoreKnowledge(), this.SetCallReducerFlags.AdminUpdateLoreKnowledgeFlags);
        }

        public bool InvokeAdminUpdateLoreKnowledge(ReducerEventContext ctx, Reducer.AdminUpdateLoreKnowledge args)
        {
            if (OnAdminUpdateLoreKnowledge == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnAdminUpdateLoreKnowledge(
                ctx
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class AdminUpdateLoreKnowledge : Reducer, IReducerArgs
        {
            string IReducerArgs.ReducerName => "admin_update_lore_knowledge";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags AdminUpdateLoreKnowledgeFlags;
        public void AdminUpdateLoreKnowledge(CallReducerFlags flags) => AdminUpdateLoreKnowledgeFlags = flags;
    }
}
